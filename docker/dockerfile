FROM ubuntu:bionic
ENV DEBIAN_FRONTEND noninteractive

ARG COMPOSER_HASH="48e3236262b34d30969dca3c37281b3b4bbe3221bda826ac6a9a62d6444cdb0dcd0615698a5cbe587c3f0fe57a54d8f5"

ARG NODE_VERSION="10.9.0"
ARG YARN_VERSION="1.9.4"

ARG USER_NAME="dev"
ARG USER_UID="1000"
ARG USER_GID="1000"

ENV TERM xterm
ENV LOCALTIME Europe/Warsaw

ENV PHP_VER="7.2"
ENV PHP_ETC_DIR="/etc/php/${PHP_VER}"

RUN apt-get -q update && apt-get -qyf --no-install-recommends install \
    apt-utils gpg-agent software-properties-common build-essential curl \
    && apt-get -y remove cmdtest \
    && add-apt-repository ppa:adshares/releases -y \
    && add-apt-repository -y ppa:ondrej/php \
    && curl -sL https://deb.nodesource.com/setup_8.x | bash - \
    && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \
    && echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list \
    && apt-get -q update && apt-get -qyf --no-install-recommends install \
        nmap mtr curl wget vim less dnsutils bash-completion net-tools iputils-* \
        git bzip2 zip unzip tree mc gettext-base \
        openssl openssh-client openssh-server \
        gnupg2 dirmngr connect-proxy iproute2 \
        mysql-client \
        php${PHP_VER}-fpm php${PHP_VER}-mysql php${PHP_VER}-bcmath php${PHP_VER}-bz2 php${PHP_VER}-curl \
        php${PHP_VER}-gd php${PHP_VER}-intl php${PHP_VER}-json php${PHP_VER}-mbstring php${PHP_VER}-opcache \
        php${PHP_VER}-pgsql php${PHP_VER}-readline php${PHP_VER}-sqlite3 php${PHP_VER}-xml php${PHP_VER}-xmlrpc \
        php${PHP_VER}-xsl php${PHP_VER}-zip \
        php-xdebug \
        ads \
        nodejs yarn \
        cron \
    && apt-get -qy autoremove && apt-get -qy clean all \
    && rm -rf /var/lib/apt/lists/* /var/cache/apk/* /usr/share/doc/*

# sshd config
RUN mkdir /var/run/sshd
RUN sed "s|#PasswordAuthentication\s*yes|PasswordAuthentication no|g" /etc/ssh/sshd_config
RUN sed "s|session\s*required\s*pam_loginuid.so|session optional pam_loginuid.so|g" -i /etc/pam.d/sshd

# timezone
RUN ln -sf /usr/share/zoneinfo/$LOCALTIME /etc/localtime
RUN echo "date.timezone = \"${LOCALTIME}\"" | tee --append ${PHP_ETC_DIR}/cli/conf.d/00-default.ini
RUN echo "date.timezone = \"${LOCALTIME}\"" | tee --append ${PHP_ETC_DIR}/fpm/conf.d/00-default.ini

# composer
RUN wget https://getcomposer.org/installer --quiet --output-document=/tmp/composer-setup.php \
    &&         echo "  expected: $COMPOSER_HASH" \
    && php -r "echo 'calculated: '. hash_file('SHA384','/tmp/composer-setup.php').PHP_EOL;" \
    && php -r "exit(strcmp(hash_file('SHA384','/tmp/composer-setup.php'),getenv('COMPOSER_HASH')));" \
    && php /tmp/composer-setup.php --install-dir=/usr/local/bin --filename=composer \
    && rm /tmp/composer-setup.php

# skel
COPY skel /etc/skel/
RUN chmod u+rwX,go-rwx -R /etc/skel/

# root
COPY skel /root/
RUN chmod u+rwX,go-rwx -R /root/

# group
RUN groupmod --non-unique --gid $USER_GID www-data

# user
RUN useradd \
    --uid $USER_UID \
    --no-user-group --gid $USER_GID \
    --create-home \
    --shell /bin/bash \
    $USER_NAME

# scripts
COPY bin /usr/local/bin/

ARG SYSTEM_USER_ID
ARG SYSTEM_USER_NAME

RUN if [ $SYSTEM_USER_ID -gt 1000 ];then \
    useradd \
    --uid $SYSTEM_USER_ID \
    --no-user-group \
    --create-home \
    $SYSTEM_USER_NAME \
    ;fi

# Credit: PHPDocker.io
COPY overrides.conf ${PHP_ETC_DIR}/fpm/pool.d/z-overrides.conf

ENTRYPOINT ["docker-php-entrypoint.sh"]
CMD ["php-fpm.sh"]
EXPOSE 9000

RUN ln -s /usr/bin/ads /usr/local/bin/ads
